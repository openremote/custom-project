apply plugin: "groovy"
apply plugin: "cz.habarta.typescript-generator"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "cz.habarta.typescript-generator:typescript-generator-gradle-plugin:$typescriptGeneratorVersion"
    }
}

dependencies {
    compileOnly "io.openremote:openremote-model-util:$openremoteVersion"
    implementation project(":agent")
    implementation project(":model")
    implementation "cz.habarta.typescript-generator:typescript-generator-core:$typescriptGeneratorVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
}

generateTypeScript createTSGeneratorConfigForClient("src/restclient.ts", new File("${project(":ui:component:model").projectDir}/src/typescript-generator-info.json"), project(":model"))
generateTypeScript.dependsOn resolveTask(":ui:component:model:generateTypeScript")

clean {
    doLast {
        def dir = new File("${projectDir}/dist")
        dir.deleteDir()
    }
}

build.dependsOn generateTypeScript, npmBuild
npmBuild.dependsOn generateTypeScript

tasks.register('prepareUi') {
    dependsOn clean, build, npmPrepare
}

tasks.register('publishUi') {
    dependsOn clean, build, npmPublish
}
